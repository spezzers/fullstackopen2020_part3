{"version":3,"sources":["components/Form.jsx","components/Filter.jsx","components/Persons.jsx","services/contacts.js","components/Notification.jsx","App.jsx","index.js"],"names":["Form","props","onSubmit","value","nameValue","onChange","nameInput","numberValue","numberInput","type","Filter","Persons","peeps","filter","remove","listPeeps","person","name","toUpperCase","includes","map","key","id","number","onClick","baseUrl","axios","get","then","res","data","newContact","post","delete","updatedContact","put","Notification","content","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","message","setMessage","useEffect","contactService","initial","clearForm","showMessage","duration","showTime","setTimeout","event","target","preventDefault","duplicate","chosenOne","length","window","confirm","p","catch","error","response","concat","deleteMe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAqBeA,EAnBF,SAAAC,GACX,OACE,oCACE,uCACA,0BAAMC,SAAUD,EAAMC,UACpB,sCACQ,2BAAOC,MAAOF,EAAMG,UAAWC,SAAUJ,EAAMK,aAEvD,uCACU,IACR,2BAAOH,MAAOF,EAAMM,YAAaF,SAAUJ,EAAMO,eAEnD,6BACE,4BAAQC,KAAK,UAAb,WCNKC,EAPA,SAACT,GACZ,OACI,wCACY,2BAAOE,MAAOF,EAAME,MAAOE,SAAUJ,EAAMI,aCsBhDM,EAxBC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAK3BC,EAHgBH,EAAMC,QAAO,SAAAG,GAAM,OACxCA,EAAOC,KAAKC,cAAcC,SAASN,EAAOK,kBAEXE,KAAI,SAAAJ,GACnC,OACC,yBAAKK,IAAKL,EAAOM,IAAjB,UACKN,EAAOC,KADZ,YACoBD,EAAOO,QAC1B,4BAAQD,GAAIN,EAAOM,GAAIE,QAASV,GAAhC,cAOH,OACC,oCACC,uCACCC,I,gBCpBEU,EAAU,eAYD,EAVA,kBAAMC,IAAMC,IAAIF,GAASG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAUzC,EARH,SAAAC,GAAU,OAAIL,IAAMM,KAAKP,EAASM,GAAYH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAQ3D,EANA,SAAAR,GAAE,OAAII,IAAMO,OAAN,UAAgBR,EAAhB,YAA2BH,KAMjC,EAJA,SAACA,EAAIY,GACnB,OAAOR,IAAMS,IAAN,UAAaV,EAAb,YAAwBH,GAAMY,GAAgBN,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCGvDM,EAXM,SAAC,GAAqB,IAApB3B,EAAmB,EAAnBA,KAAM4B,EAAa,EAAbA,QACzB,OAAgB,OAAZA,EACO,KAGP,yBAAKC,UAAW7B,GACX4B,IC4FEE,EA7FH,WAAO,IAAD,EACaC,mBAAS,IADtB,mBACVC,EADU,KACDC,EADC,OAEaF,mBAAS,IAFtB,mBAEVG,EAFU,KAEDC,EAFC,OAGiBJ,mBAAS,IAH1B,mBAGVK,EAHU,KAGCC,EAHD,OAIWN,mBAAS,IAJpB,mBAIV3B,EAJU,KAIFkC,EAJE,OAKaP,mBAAS,CAAC/B,KAAM,GAAI4B,QAAQ,KALzC,mBAKVW,EALU,KAKDC,EALC,KAOjBC,qBAAU,WACTC,IAAwBvB,MAAK,SAAAwB,GAC5BV,EAAWU,QAEV,IAEH,IAGMC,EAAY,WACjBT,EAAW,IACXE,EAAa,KAoDRQ,EAAc,SAAC7C,EAAMuC,EAASO,GACnC,IAAMC,EAAWD,GAAY,IAC7BN,EAAW,CAACxC,KAAMA,EAAM4B,QAASW,IACjCS,YAAW,kBAAMR,EAAW,CAACxC,KAAK,GAAI4B,QAAS,OAAMmB,IAGtD,OACC,6BACC,yCACA,kBAAC,EAAD,CAAc/C,KAAMuC,EAAQvC,KAAM4B,QAASW,EAAQX,UACnD,kBAAC,EAAD,CAAQlC,MAAOU,EAAQR,SAjEC,SAAAqD,GAAK,OAAIX,EAAUW,EAAMC,OAAOxD,UAkExD,kBAAC,EAAD,CACCC,UAAWuC,EACXrC,UAtEqB,SAAAoD,GAAK,OAAId,EAAWc,EAAMC,OAAOxD,QAuEtDI,YAAasC,EACbrC,YAvEuB,SAAAkD,GAAK,OAAIZ,EAAaY,EAAMC,OAAOxD,QAwE1DD,SAjEe,SAAAwD,GACjBA,EAAME,iBACN,IAAMC,EAAYpB,EAAQ5B,QACzB,SAAAG,GAAM,OAAIA,EAAOC,KAAKC,gBAAkByB,EAAQzB,iBAE3C4C,EAAYD,EAAU,GAE5B,GAAIA,EAAUE,OAAS,GACtB,GAAIC,OAAOC,QAAP,WAAmBtB,EAAnB,kDAA4E,CAC/E,IAAMT,EAAc,2BAAQ4B,GAAR,IAAmBvC,OAAQsB,IAC/CM,EAAsBW,EAAUxC,GAAIY,GAClCN,MAAK,SAAAC,GACLa,EAAWD,EAAQrB,KAAI,SAAA8C,GAAC,OAAKA,EAAE5C,KAAOwC,EAAUxC,GAAK4C,EAAIrC,MACzDyB,EAAY,UAAD,kBAAuBzB,EAAIZ,OACtCoC,OAEAc,OAAM,SAAAC,GAAK,OAAId,EAAY,QAASc,EAAMC,SAASvC,eAGrDqB,EAAmB,CAAElC,KAAM0B,EAASpB,OAAQsB,IAC3CjB,MAAK,SAAAC,GACLa,EAAWD,EAAQ6B,OAAOzC,IAC1ByB,EAAY,UAAD,gBAAqBzB,EAAIZ,OACpCoC,OAEAc,OAAM,SAAAC,GAAK,OAAId,EAAY,QAASc,EAAMC,SAASvC,YA0CrD,kBAAC,EAAD,CAASlB,MAAO6B,EAAS5B,OAAQA,EAAQC,OApCtB,SAAA4C,GACpB,IAAMpC,EAAKoC,EAAMC,OAAOrC,GAClBiD,EAAW9B,EAAQ5B,QAAO,SAAAqD,GAAC,OAAIA,EAAE5C,KAAOA,KAAI,GAE9C0C,OAAOC,QAAP,uCAA+CM,EAAStD,QAC3DkC,EACS7B,GACPM,MAAK,WACLc,EAAWD,EAAQ5B,QAAO,SAAAqD,GAAC,OAAIA,EAAE5C,KAAOA,MACxCgC,EAAY,SAAD,kBAAsBiB,EAAStD,UAE1CkD,OAAM,SAAAC,GACN1B,EAAYD,EAAQ5B,QAAO,SAAAqD,GAAC,OAAIA,EAAE5C,KAAOA,MACzCgC,EAAY,QAAD,UAAaiB,EAAStD,KAAtB,6CCpEhBuD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.c9d75f55.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = props => {\r\n  return (\r\n    <>\r\n      <h2>Add new</h2>\r\n      <form onSubmit={props.onSubmit}>\r\n        <div>\r\n          name: <input value={props.nameValue} onChange={props.nameInput} />\r\n        </div>\r\n        <div>\r\n          number:{' '}\r\n          <input value={props.numberValue} onChange={props.numberInput} />\r\n        </div>\r\n        <div>\r\n          <button type='submit'>add</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            filter: <input value={props.value} onChange={props.onChange}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Filter\r\n","import React from 'react'\r\n\r\n\r\nconst Persons = ({ peeps, filter, remove }) => {\r\n\r\n\tconst filteredPeeps = peeps.filter(person =>\r\n\t\tperson.name.toUpperCase().includes(filter.toUpperCase())\r\n\t)\r\n\tconst listPeeps = filteredPeeps.map(person => {\r\n\t\treturn (\r\n\t\t\t<div key={person.id}>\r\n\t\t\t\t{`${person.name} ${person.number}`}\r\n\t\t\t\t<button id={person.id} onClick={remove}>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t)\r\n  })\r\n  \r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Numbers</h2>\r\n\t\t\t{listPeeps}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Persons\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => axios.get(baseUrl).then(res => res.data)\r\n\r\nconst add = newContact => axios.post(baseUrl, newContact).then(res => res.data)\r\n\r\nconst remove = id => axios.delete(`${baseUrl}/${id}`)\r\n\r\nconst update = (id, updatedContact) => {\r\n\treturn axios.put(`${baseUrl}/${id}`, updatedContact).then(res => res.data)\r\n}\r\n\r\nexport default { getAll, add, remove, update }\r\n","import React from 'react'\r\n\r\n\r\nconst Notification = ({type, content}) => {\r\n    if( content === null) {\r\n        return null\r\n    }\r\n    return(\r\n        <div className={type}>\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Form from './components/Form.jsx'\r\nimport Filter from './components/Filter.jsx'\r\nimport Persons from './components/Persons.jsx'\r\nimport contactService from './services/contacts.js'\r\nimport Notification from './components/Notification'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n\tconst [persons, setPersons] = useState([])\r\n\tconst [newName, setNewName] = useState('')\r\n\tconst [newNumber, setNewNumber] = useState('')\r\n\tconst [filter, setFilter] = useState('')\r\n\tconst [message, setMessage] = useState({type: '', content:''})\r\n\r\n\tuseEffect(() => {\r\n\t\tcontactService.getAll().then(initial => {\r\n\t\t\tsetPersons(initial)\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst handleNameInput = event => setNewName(event.target.value)\r\n\tconst handleNumberInput = event => setNewNumber(event.target.value)\r\n\tconst handleFilterInput = event => setFilter(event.target.value)\r\n\tconst clearForm = () => {\r\n\t\tsetNewName('')\r\n\t\tsetNewNumber('')\r\n\t}\r\n\r\n\tconst addPerson = event => {\r\n\t\tevent.preventDefault()\r\n\t\tconst duplicate = persons.filter(\r\n\t\t\tperson => person.name.toUpperCase() === newName.toUpperCase()\r\n\t\t)\r\n\t\tconst chosenOne = duplicate[0]\r\n\r\n\t\tif (duplicate.length > 0) {\r\n\t\t\tif (window.confirm(`'${newName}' is already in the phonebook, update number?`)) {\r\n\t\t\t\tconst updatedContact = { ...chosenOne, number: newNumber }\r\n\t\t\t\tcontactService.update(chosenOne.id, updatedContact)\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tsetPersons(persons.map(p => (p.id !== chosenOne.id ? p : res)))\r\n\t\t\t\t\t\tshowMessage('success', `Updated ${res.name}`)\r\n\t\t\t\t\t\tclearForm()\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => showMessage('error', error.response.data))\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcontactService.add({ name: newName, number: newNumber })\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tsetPersons(persons.concat(res))\r\n\t\t\t\t\tshowMessage('success', `Added ${res.name}`)\r\n\t\t\t\t\tclearForm()\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => showMessage('error', error.response.data))\r\n\t\t\t\t\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tconst removePerson = event => {\r\n\t\tconst id = event.target.id\r\n\t\tconst deleteMe = persons.filter(p => p.id === id)[0]\r\n\r\n\t\tif (window.confirm(`Do you really want to delete ${deleteMe.name}`)) {\r\n\t\t\tcontactService\r\n\t\t\t\t.remove(id)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetPersons(persons.filter(p => p.id !== id))\r\n\t\t\t\t\tshowMessage('notify', `Deleted ${deleteMe.name}`)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tsetPersons( persons.filter(p => p.id !== id))\r\n\t\t\t\t\tshowMessage('error', `${deleteMe.name} already deleted from the server`)\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst showMessage = (type, message, duration) => {\r\n\t\tconst showTime = duration || 4000\r\n\t\tsetMessage({type: type, content: message})\r\n\t\tsetTimeout(() => setMessage({type:'', content: ''}), showTime)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Phonebook</h1>\r\n\t\t\t<Notification type={message.type} content={message.content}/>\r\n\t\t\t<Filter value={filter} onChange={handleFilterInput} />\r\n\t\t\t<Form\r\n\t\t\t\tnameValue={newName}\r\n\t\t\t\tnameInput={handleNameInput}\r\n\t\t\t\tnumberValue={newNumber}\r\n\t\t\t\tnumberInput={handleNumberInput}\r\n\t\t\t\tonSubmit={addPerson}\r\n\t\t\t/>\r\n\t\t\t<Persons peeps={persons} filter={filter} remove={removePerson} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}